{"mappings":"AACO,MAAMA,EAAc,oCC0B3BC,EAzBwB,CAACC,EAA4BC,EAAgC,CAAEC,OAAO,MAC5F,IAAIC,EAAM,GAKNA,EAJe,iBAARH,EACJF,EAAeM,KAAKJ,GAGjBA,EAFA,0BAA4BA,EAK9BK,IAAIC,gBAAgBN,GAG5B,MAAMO,EAAQ,IAAIC,MAElB,OAAO,IAAIC,SAAiB,CAACC,EAASC,KACpCJ,EAAMK,iBAAiB,SAAS,MDN7B,SAAiBX,EAA+BS,EAAmCC,GACjFV,GAAQC,MACXS,EAAO,IAAIE,MAAM,iEACjBH,GAAQ,GCIRI,CAAQb,EAAQS,EAASC,MAE3BJ,EAAMK,iBAAiB,QAAQ,KAC7BF,GAAQ,MACP,GACHH,EAAMP,IAAMG","sources":["src/shared.ts","src/validateInDom.ts"],"sourcesContent":["/** The regex to detect if base64 string contains browser specific data image instruction */\nexport const IMG_DATA_REGEX = /^data:image\\/\\w{2,5};base64,/i\n\nexport type ImageValidationDomSrc = string | File\n\nexport type ImageValidationNodeSrc = Buffer | Uint8Array | Uint8ClampedArray | Int8Array | Uint16Array | Int16Array | Uint32Array | Int32Array | Float32Array | Float64Array | string\n\nexport interface ImageValidationConfig {\n  throw: boolean\n}\n\nexport function failure(config: ImageValidationConfig, resolve: (value: boolean) => void, reject: (reason: Error) => void) {\n  return config?.throw\n    ? reject(new Error('The media resource is either invalid, corrupt or not usable.'))\n    : resolve(false)\n}\n","import { failure, ImageValidationConfig, ImageValidationDomSrc, IMG_DATA_REGEX } from \"./shared\"\n\nconst ImageValidation = (src: ImageValidationDomSrc, config: ImageValidationConfig = { throw: true }) => {\n  let url = ''\n  if (typeof src === 'string') {\n    if (!IMG_DATA_REGEX.test(src)) {\n      url = 'data:image/jpeg;base64,' + src\n    } else {\n      url = src\n    }\n  } else {\n    url = URL.createObjectURL(src)\n  }\n\n  const image = new Image()\n\n  return new Promise<boolean>((resolve, reject) => {\n    image.addEventListener('error', () => {\n      failure(config, resolve, reject)\n    })\n    image.addEventListener('load', () => {\n      resolve(true)\n    }, false)\n    image.src = url\n  })\n}\n\nexport default ImageValidation"],"names":["$9bac9ea12410bb8e$export$ef1a7b1b09d1a9de","$a32e666041966ab2$export$2e2bcd8739ae039","src","config","throw","url","test","URL","createObjectURL","image","Image","Promise","resolve","reject","addEventListener","Error","$9bac9ea12410bb8e$export$af2dba6db4e9e1f0"],"version":3,"file":"validateInDom.js.map"}